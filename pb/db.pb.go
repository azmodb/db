// Code generated by protoc-gen-go.
// source: db.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	db.proto

It has these top-level messages:
	Record
	Pair
	Value
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Type int32

const (
	Type_Invalid Type = 0
	Type_Numeric Type = 1
	Type_Unicode Type = 2
)

var Type_name = map[int32]string{
	0: "Invalid",
	1: "Numeric",
	2: "Unicode",
}
var Type_value = map[string]int32{
	"Invalid": 0,
	"Numeric": 1,
	"Unicode": 2,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Record struct {
	Values  []*Value `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	Type    Type     `protobuf:"varint,2,opt,name=type,enum=db.Type" json:"type,omitempty"`
	Current int64    `protobuf:"varint,3,opt,name=current" json:"current,omitempty"`
}

func (m *Record) Reset()                    { *m = Record{} }
func (m *Record) String() string            { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()               {}
func (*Record) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Record) GetValues() []*Value {
	if m != nil {
		return m.Values
	}
	return nil
}

type Pair struct {
	Values []*Value `protobuf:"bytes,1,rep,name=values" json:"values,omitempty"`
	Key    []byte   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Type   Type     `protobuf:"varint,3,opt,name=type,enum=db.Type" json:"type,omitempty"`
}

func (m *Pair) Reset()                    { *m = Pair{} }
func (m *Pair) String() string            { return proto.CompactTextString(m) }
func (*Pair) ProtoMessage()               {}
func (*Pair) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Pair) GetValues() []*Value {
	if m != nil {
		return m.Values
	}
	return nil
}

type Value struct {
	Unicode []byte `protobuf:"bytes,1,opt,name=unicode,proto3" json:"unicode,omitempty"`
	Numeric int64  `protobuf:"varint,2,opt,name=numeric" json:"numeric,omitempty"`
	Rev     int64  `protobuf:"varint,3,opt,name=rev" json:"rev,omitempty"`
}

func (m *Value) Reset()                    { *m = Value{} }
func (m *Value) String() string            { return proto.CompactTextString(m) }
func (*Value) ProtoMessage()               {}
func (*Value) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Record)(nil), "db.Record")
	proto.RegisterType((*Pair)(nil), "db.Pair")
	proto.RegisterType((*Value)(nil), "db.Value")
	proto.RegisterEnum("db.Type", Type_name, Type_value)
}

func init() { proto.RegisterFile("db.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x90, 0xbf, 0x4f, 0x03, 0x21,
	0x14, 0xc7, 0xbd, 0x03, 0xaf, 0xf5, 0xd5, 0x18, 0xc2, 0xc4, 0xe0, 0x50, 0x6f, 0x6a, 0x4c, 0xec,
	0x50, 0xff, 0x03, 0x37, 0x07, 0x8d, 0x21, 0x6a, 0xa2, 0x5b, 0x81, 0x37, 0x10, 0x15, 0x2e, 0x78,
	0x34, 0xe9, 0x7f, 0x2f, 0x8f, 0x5e, 0x9d, 0x1c, 0xdc, 0xf8, 0xbc, 0x1f, 0xdf, 0xcf, 0x0b, 0x30,
	0x77, 0x66, 0x3d, 0xa4, 0x38, 0x46, 0xd9, 0x3a, 0xd3, 0x5b, 0xe8, 0x34, 0xda, 0x98, 0x9c, 0xbc,
	0x82, 0x6e, 0xb7, 0xfd, 0xcc, 0xf8, 0xad, 0x9a, 0x25, 0x5b, 0x2d, 0x36, 0x67, 0xeb, 0x32, 0xf8,
	0x4a, 0x15, 0x3d, 0x35, 0xe4, 0x25, 0xf0, 0x71, 0x3f, 0xa0, 0x6a, 0x97, 0xcd, 0xea, 0x62, 0x33,
	0xa7, 0x81, 0xe7, 0xc2, 0xba, 0x56, 0xa5, 0x82, 0x99, 0xcd, 0x29, 0x61, 0x18, 0x15, 0x2b, 0x03,
	0x4c, 0x1f, 0xb1, 0x7f, 0x03, 0xfe, 0xb4, 0xf5, 0xe9, 0x3f, 0x0a, 0x01, 0xec, 0x03, 0xf7, 0xd5,
	0x70, 0xae, 0xe9, 0xf9, 0x2b, 0x65, 0x7f, 0x49, 0xfb, 0x07, 0x38, 0xad, 0x01, 0x64, 0xcf, 0xc1,
	0xdb, 0xe8, 0xb0, 0x84, 0xd3, 0xf2, 0x11, 0xa9, 0x13, 0xf2, 0x17, 0x26, 0x6f, 0x6b, 0x6c, 0xb9,
	0x6b, 0x42, 0x92, 0x25, 0xdc, 0x4d, 0xd7, 0xd2, 0xf3, 0xfa, 0x06, 0x38, 0x85, 0xcb, 0x05, 0xcc,
	0xee, 0x43, 0x39, 0xc9, 0x3b, 0x71, 0x42, 0xf0, 0x78, 0xd8, 0x10, 0x0d, 0xc1, 0xcb, 0x21, 0x58,
	0xb4, 0x77, 0xfc, 0xbd, 0x1d, 0x8c, 0xe9, 0xea, 0x77, 0xde, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x13, 0x61, 0x2a, 0xc8, 0x5a, 0x01, 0x00, 0x00,
}
